package leetcode.dataStructure;

import java.util.HashMap;

/**
 * @program: LeetCode
 * @description: 389
 *
 *You are given two strings s and t.
 *
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 *
 * Return the letter that was added to t.
 * Example 1:
 *
 * Input: s = "abcd", t = "abcde"
 * Output: "e"
 * Explanation: 'e' is the letter that was added.
 * Example 2:
 *
 * Input: s = "", t = "y"
 * Output: "y"
 * Example 3:
 *
 * Input: s = "a", t = "aa"
 * Output: "a"
 * Example 4:
 *
 * Input: s = "ae", t = "aea"
 * Output: "a"
 * @author: Keyang Wang
 * @create: 2021-03-16 21:12
 **/
public class FindTheDifference {
    public char findTheDifference(String s, String t) {
        if (s.length()==0){
            return t.toCharArray()[0];
        }
        HashMap<Character, Integer> sHash = new HashMap<>();
        //char[] tArray = t.toCharArray();
        for (char sTemp:s.toCharArray()) {
            if (sHash.containsKey(sTemp)){
                int count = sHash.get(sTemp)+1;
                sHash.put(sTemp,count);
            }else {
                sHash.put(sTemp,1);
            }
        }

        for (char tTemp:t.toCharArray()) {
            if (sHash.containsKey(tTemp)){
                int count = sHash.get(tTemp) -1;
                if (count<0){
                    return tTemp;
                }else {
                    sHash.put(tTemp,count);
                }
            }else {
                return tTemp;
            }
        }
        return 'a';
    }

    /**
     * calculate the ASCII character
     * @param s
     * @param t
     * @return
     */
    public char findTheDifference2(String s, String t){
        if (s.length()==0){
            return t.toCharArray()[0];
        }
        int sCount=0,tCount =0;
        for (char sChar: s.toCharArray()) {
            sCount += sChar;
        }
        for (char tChar:t.toCharArray()) {
            tCount += tChar;
        }
        return (char) (tCount-sCount);
    }
}
